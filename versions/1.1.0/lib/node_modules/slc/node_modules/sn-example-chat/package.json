{
  "name": "sn-example-chat",
  "version": "0.1.0",
  "description": "StrongNode example to showcase how to use `socket.io` with an `express` server.",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": "",
  "author": {
    "name": "Michael Schoonmaker",
    "email": "michael@strongloop.com"
  },
  "dependencies": {
    "async": "~0.2.8",
    "express": "~3.2.4",
    "socket.io": "~0.9.14",
    "strong-agent": "~0.2.11",
    "strong-cluster-control": "~0.1.0",
    "strong-cluster-socket.io-store": "~0.1.1",
    "strong-mq": "~0.0.4",
    "rc": "~0.3.0",
    "optimist": "~0.6.0"
  },
  "license": "MIT",
  "readme": "# SLNode Chat Examples\n\nA pair of examples to showcase how to use `socket.io` with a static `express` server and `async` for control flow.\n\nThe cluster example also showcases using strongloop cluster modules:\n\n- [strong-agent](https://npmjs.org/package/strong-agent)\n- [strong-mq](https://npmjs.org/package/strong-mq), for message pub/sub across\n  clusters\n- [strong-cluster-socket.io-store](https://npmjs.org/package/strong-cluster-socket.io-store),\n  implementation of socket.io store allowing socket.io to work across clusters\n\nSee [strongloop/resources](http://strongloop.com/products/resources) for more\ninformation, particularly about the strong-agent.\n\n## Setup\n\n    $ npm install\n\n## Running the Simple Example\n\n    $ node bin/simple 3000\n       info  - socket.io started\n    Listening on port 3000...\n\nOnce the example is running, open `http://localhost:3000` in a browser. As you enter your name, watch the Users list\n(on the left) update. Once you press Enter or Send, the message is shared with all connected clients.\n\n## Running the Cluster Example\n\n    $ node bin/cluster 3000\n       info  - socket.io started\n    Worker 1838 listening on port 3000...\n       info  - socket.io started\n    Worker 1839 listening on port 3001...\n\nOnce the example is running, point one browser to `http://localhost:3000` and another to `http://localhost:3001`. Now,\nmessages sent to one server process will be shared with the other process.\n\n## Running with strong-agent monitoring\n\nOnce you have an API key for nodefly, run the chat samples like:\n\n    $ NODEFLY_KEY=XXXXXX node bin/cluster 3000\n\nAnd login to the console at http://nodefly.com to see run-time performance\nmonitoring.\n",
  "readmeFilename": "README.md",
  "_id": "sn-example-chat@0.1.0",
  "dist": {
    "shasum": "d05a1563474f18fda2d42047eee64ec18ab004a6"
  },
  "_resolved": "git://github.com/strongloop/sn-example-chat#c474c79497ebdce858944acdfabed2d66e33b34c",
  "_from": "git://github.com/strongloop/sn-example-chat#strongloopsuite-1.1.0-4",
  "_fromGithub": true
}
